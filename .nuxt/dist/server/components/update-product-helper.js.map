{"version":3,"file":"components/update-product-helper.js","sources":["webpack:///./components/admin/products/updateProductHelper.js"],"sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\n\nexport default {\n  data() {\n    return {\n      types: [\n        {\n          name: \"Select Type\",\n          value: null,\n        },\n        {\n          name: \"Under Bounipun\",\n          value: \"under-bounipun\",\n        },\n        {\n          name: \"Third Party\",\n          value: \"third-party\",\n        },\n      ],\n      availabilityTypes: [\n        {\n          name: \"Select Availablity Type\",\n          value: \"\",\n        },\n        {\n          name: \"Made To Order\",\n          value: \"made-to-order\",\n        },\n        {\n          name: \"Ready To Ship\",\n          value: \"ready-to-ship\",\n        },\n      ],\n      colorSourceTypes: [\n        {\n          name: \"Select Source\",\n          value: \"\",\n        },\n        {\n          name: \"Bounipun Colors\",\n          value: \"bounipun-colors\",\n        },\n        {\n          name: \"Custom\",\n          value: \"custom\",\n        },\n      ],\n      genders: [\n        {\n          name: \"Select Preferred Gender\",\n          value: \"\",\n        },\n        {\n          name: \"For Her\",\n          value: \"for-her\",\n        },\n        {\n          name: \"For Him\",\n          value: \"for-him\",\n        },\n        {\n          name: \"For Him & Her\",\n          value: \"for-him-and-her\",\n        },\n        {\n          name: \"N/A\",\n          value: \"na\",\n        },\n      ],\n    };\n  },\n  computed: {\n    collectionInflationPercentage() {\n        let inflationPercentage = 0;\n        if (this.doc.type === \"under-bounipun\") {\n          const foundIndex = this.collections.findIndex(\n            (col) => col.value === this.doc.bounipun_collection\n          );\n          if (foundIndex === -1) return 0;\n          const collection = this.collections[foundIndex];\n          inflationPercentage = collection.inflationPercentage;\n        }\n        return inflationPercentage;\n      },\n      selectedCollection() {\n        if (this.doc.type === \"under-bounipun\") {\n          const foundIndex = this.collections.findIndex(\n            (col) => col.value === this.doc.bounipun_collection\n          );\n          if (foundIndex === -1) return false;\n          const collection = this.collections[foundIndex];\n          return collection;\n        }\n        return false;\n      },\n      bounipunColors() {\n        return this.doc.colorSource === \"bounipun-colors\";\n      },\n      thirdPartyProduct() {\n        return this.doc.type === \"third-party\";\n      },\n      readyToShip() {\n        return this.doc.availabilityType === \"ready-to-ship\";\n      },\n      rtsAndUnderBounipun() {\n        return this.readyToShip && !this.thirdPartyProduct;\n      },\n      underAutograph() {\n        /* TODO: should first fetch the _id of the autograph doc in collections and then compare */\n        return (\n          this.doc.bounipun_collection === \"60523a3648d11650a841b82a\" &&\n          this.doc.type !== \"third-party\"\n        );\n      },\n      underEscape() {\n        return (\n          this.doc.bounipun_collection === \"60522ab3be493200150ff835\" &&\n          this.doc.type !== \"third-party\"\n        );\n      },\n  },\n  methods: {\n    setMainColor(index) {\n        /* if value set to true, turn all other main image flags off */\n  \n        for (let i = 0; i < this.doc.colors.length; i++) {\n          this.doc.colors[i].mainColor = false;\n        }\n  \n        setTimeout(() => {\n          this.doc.colors[index].mainColor = true;\n          this.doc.colors[index].status = true;\n          this.$forceUpdate();\n        }, 100);\n      },\n      isActiveColor(index) {\n        return this.doc.colors[index].mainColor;\n      },\n      async fetchBaseColors() {\n        const result = await this.$fetchCollection(\"base_colors\");\n        if (!result.fetched || result.docs.length === 0) {\n          return;\n        }\n  \n        /* base colors array */\n        this.baseColors = result.docs.map((color) => {\n          return {\n            name: color.name.toUpperCase(),\n            value: color.name,\n          };\n        });\n  \n        this.baseColors.unshift({\n          name: \"Select Color\",\n          value: \"\",\n        });\n      },\n          /* image list updated */\n    imageListUpdated(list, index) {\n        // console.log(list, index);\n        this.doc.colors[index].images = list;\n      },\n    async fetchActiveCurrencies() {\n        const request = await this.$post(\"/findDocuments\", {\n          model: \"currency\",\n          filters: {\n            adminEnabled: true,\n            status: true,\n          },\n        });\n  \n        if (request.resolved == false) {\n          return;\n        }\n  \n        const currencies = request.response;\n  \n        this.currencies = currencies;\n  \n        this.currencies.forEach(({ code }) => {\n          const dbPrice = this.doc.directPricing[code];\n          this.doc.directPricing[code] = dbPrice === undefined ? dbPrice : \"\";\n        });\n      },\n    // check price validitity\n    checkValidPrice(price) {\n      if (typeof price === \"number\") {\n        return true;\n      }\n      if (price === undefined || price === null) return false;\n\n      return price.trim() !== \"\";\n    },\n\n    /* check all prices INR as well as non INR */\n    checkAllPrices(INRPrice, NonINRPrices) {\n      const INRPriceValid = this.checkValidPrice(INRPrice);\n      if (INRPriceValid === false) {\n        return false;\n      }\n\n      /* check non INR Pricing */\n      const currencyCodes = Object.keys(NonINRPrices);\n      const nonINRSet = currencyCodes.every((code) =>\n        this.checkValidPrice(NonINRPrices[code])\n      );\n\n      return nonINRSet;\n    },\n    /* add new color */\n    addNewColor(color) {\n      // console.log(color);\n      this.doc.colors.push({\n        _id: color._id,\n        name: color.name,\n        code: color.code,\n        images: [],\n        disclaimer: \"\",\n        mainColor: false,\n        status: false,\n        key: uuidv4(),\n      });\n    },\n    colorDeselected(color) {\n      /* find key of the deselected color */\n      const foundIndex = this.doc.colors.findIndex(\n        (col) => col._id === color._id\n      );\n      console.log(color, foundIndex, \"DESELECTED\");\n      /* remove color */\n      this.removeColor(foundIndex);\n    },\n    /* remove color */\n    removeColor(key, direct = false) {\n      // if (this.doc.colors.length === 1)\n      //     return;\n      const tobeRemoved = this.doc.colors[key];\n      this.doc.colors.splice(key, 1);\n      if (this.bounipunColors && direct)\n        this.$refs.colorPicker.deselectColor(tobeRemoved);\n    },\n    async deleteDocument() {\n        this.loading = true;\n        const result = await this.$deleteDocument(this.model, this.doc._id);\n        this.loading = false;\n\n        if (!result.deleted) {\n          this.errorToast.status = true;\n          this.errorToast.msg =\n            result.msg !== undefined ? result.msg : \"Something went wrong\";\n          setTimeout(() => (this.errorToast.status = false), 2200);\n          return;\n        }\n  \n        this.$emit(\"updated\");\n        this.resetForm();\n        this.$flash(this);\n      },\n      closeForm() {\n        this.resetForm();\n        this.$emit(\"resetVariants\");\n        this.$emit(\"close\");\n      },\n\n  },\n};\n"],"mappings":";;;;;;;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AA5DA;AAkEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAIA;AACA;AAAA;AACA;AAIA;AACA;AAjDA;AAkDA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AADA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAFA;AACA;AAOA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AADA;AACA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AA9IA;AAvHA;;;;A","sourceRoot":""}